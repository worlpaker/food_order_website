version: '3'

services:

  db:
    image: postgres
    restart: unless-stopped
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
     

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    restart: unless-stopped    
    ports:
     - "2181:2181"
    depends_on:
    - db

  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped    
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test_topic:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  frontend:
    build:
     context: ./frontend
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - db
      
  backend:
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
    - "8000:8000"
    depends_on:
    - db
    - zookeeper
    - kafka
    - frontend

